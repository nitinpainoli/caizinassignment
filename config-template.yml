account_name: ttn
environment_name: test
key_name: ttn-test
aws:
    region: us-east-2
    account_id: 454578700264
common_tags: 
    Environment: test
vpc:
    cidr_block: 10.0.0.0/16
    subnet_bits: 6
    subnet:
      private:
        is_public: false
        nat_gateway: true
        details:
          - availability_zone: "a"
            cidr_address: "10.0.0.0/22"
          - availability_zone: "b"
            cidr_address: "10.0.4.0/22"
      public:
        is_public: true
        nat_gateway: false
        details:
          - availability_zone: "a"
            cidr_address: "10.0.12.0/24"
          - availability_zone: "b"
            cidr_address: "10.0.13.0/24"
      database:
        is_public: false
        nat_gateway: false
        details:
          - availability_zone: "a"
            cidr_address: "10.0.14.0/24"
          - availability_zone: "b"
            cidr_address: "10.0.15.0/24"
    create_vpc_endpoint: true
vpn:
    instance_type: "t3a.medium"
    volume_type: "gp3"
    root_volume_size: "20"
    ami_id: "ami-0a7cf821b91bcccbc" # requires ubuntu 20
    vpn_port: 14922
rds:
    allocated_storage: 10
    create_mysql_proxy: false
    engine: "aurora-mysql"
    engine_version: "8.0.mysql_aurora.3.02.2"
    instance_class: "db.serverless" #"db.t3.medium"
    serverlessv2_scaling_configuration_max: 4     # required for instance class db.serverless
    serverlessv2_scaling_configuration_min: 1     # required for instance class db.serverless
    db_name: "etvdev"
    username: root
    storage_encrypted: true
    multi_az: false
    auto_minor_version_upgrade: true
    parameter_group_family: "aurora-mysql8.0"
    retention: 1
    deletion_protection: true
    create_rds: false
    create_aurora: true
    create_db_parameter_group: false
    create_cluster_parameter_group: true
mongodb:
    primary_node_type: "m5a.large"
    create_secondary: 2
    secondary_node_type: "m5a.large"
    db_name: "admin"
    key_name: "test-mongodb"
queue:
    ami_id: ami-0dd022e543c91b005
    instance_type: "t4g.medium"
    volume_type: "gp3"
    root_volume_size: 50
elasticsearch:
    instance_type: t4g.medium
    monitoring: false
    disable_api_termination: false
    ami_id: ami-0dd022e543c91b005
    volume_type: gp3
    volume_size: 100
    delete_on_termination: true
logging:
    instance_type: t4g.medium
    monitoring: false
    disable_api_termination: false
    ami_id: ami-0dd022e543c91b005
    volume_type: gp3
    volume_size: 100
    delete_on_termination: true
backend-cache:
    engine: redis
    failover: true
    node_type: cache.t4g.small
    version: "7.0"
    port: 6379
    num_cache_nodes: 1
    pg_family: redis7
    multi_az_enabled: true
    clusters: 2
eks:
    version: 1.29
    endpoint_private_access: true
    endpoint_public_access: true
    on_demand:
      create: true
      min_size: 1
      desired_size: 1
      max_size: 1
    spot:
      create: false
      min_size: 1
      desired_size: 1
      max_size: 1
    root_volume_size: 50
    instance_type:
      - t4g.medium
